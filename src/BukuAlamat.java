
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class BukuAlamat extends javax.swing.JFrame {

    /**
     * Creates new form BukuAlamat
     */
    
    private DefaultListModel<String> listModel; // Model untuk menyimpan daftar entri dalam format string
      
    public BukuAlamat() {
        initComponents();     
        
        setLocationRelativeTo(null); // Menampilkan JFrame di tengah layar
        
        listModel = new DefaultListModel<>(); // Membuat instance baru dari DefaultListModel untuk menyimpan entri
    
        listEntries.setModel(listModel); // Menghubungkan listModel dengan komponen listEntries pada GUI

        loadEntries(); // Memuat daftar entri dari database dan menampilkannya pada listModel
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelJudul = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fieldNama = new javax.swing.JTextField();
        fieldAlamat = new javax.swing.JTextField();
        fiedlKota = new javax.swing.JTextField();
        fieldTelepon = new javax.swing.JTextField();
        fieldCari = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        btnImpor = new javax.swing.JButton();
        btnEkspor = new javax.swing.JButton();
        btnMuat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEntries = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Buku Alamat");

        labelJudul.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelJudul.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelJudul.setText("APLIKASI BUKU ALAMAT");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Nama");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Alamat");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Kota");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Telepon");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Pencarian");

        fieldNama.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        fieldAlamat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        fiedlKota.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        fieldTelepon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        fieldCari.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnTambah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnCari.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnImpor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnImpor.setText("Impor dari File");
        btnImpor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImporActionPerformed(evt);
            }
        });

        btnEkspor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEkspor.setText("Ekspor ke File");
        btnEkspor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEksporActionPerformed(evt);
            }
        });

        btnMuat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMuat.setText("Muat Data");
        btnMuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuatActionPerformed(evt);
            }
        });

        listEntries.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEntriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listEntries);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(fieldAlamat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                                    .addComponent(fiedlKota, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldTelepon)
                                    .addComponent(fieldNama)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnHapus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCari, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnMuat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(btnUbah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnTambah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator5)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addComponent(labelJudul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnImpor, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEkspor, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(labelJudul)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnTambah))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnUbah))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fiedlKota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnMuat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImpor)
                    .addComponent(btnEkspor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadEntries() {
        clearFields(); // Menghapus isi field
        listModel.clear(); // Mengosongkan model list

        try (ResultSet rs = Entry.getEntries()) {
            // Menambahkan setiap entri dari database ke listModel
            while (rs != null && rs.next()) {
                listModel.addElement(rs.getInt("id") + ". " + rs.getString("nama") + " - " + rs.getString("alamat") + " - " + rs.getString("kota") + " - " + rs.getString("telepon"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    // Menghapus isi field input
    private void clearFields() {
        fieldNama.setText("");
        fieldAlamat.setText("");
        fiedlKota.setText("");
        fieldTelepon.setText("");
        fieldCari.setText("");
    }

    // Memvalidasi apakah nomor telepon terdiri dari angka dengan panjang 10 hingga 14 digit
    private boolean isValidPhoneNumber(String phoneNumber) {
        return phoneNumber.matches("\\d{10,14}");
    }
    
    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // Memastikan semua field input tidak kosong
        if (!fieldNama.getText().equals("") && !fieldAlamat.getText().equals("") && !fiedlKota.getText().equals("") && !fieldTelepon.getText().equals("")) {
            // Memeriksa apakah nomor telepon valid
            if (isValidPhoneNumber(fieldTelepon.getText())) {
                // Menambahkan entri baru ke database
                Entry.addEntry(new Entry(fieldNama.getText(), fieldAlamat.getText(), fiedlKota.getText(), fieldTelepon.getText()));
                JOptionPane.showMessageDialog(null, "Entri berhasil ditambahkan!");
                loadEntries(); // Memuat ulang daftar entri
            } else {
                // Menampilkan pesan jika nomor telepon tidak valid
                JOptionPane.showMessageDialog(null, "Nomor telepon harus berupa angka dan memiliki panjang 10 - 14 digit.");
            }
        } else {
            // Menampilkan pesan jika ada field kosong
            JOptionPane.showMessageDialog(null, "Field Nama, Alamat, Kota dan Telepon tidak boleh kosong!");
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        int selectedIndex = listEntries.getSelectedIndex(); // Mendapatkan indeks entri yang dipilih
        // Memastikan ada entri yang dipilih dan nomor telepon valid
        if (selectedIndex != -1 && isValidPhoneNumber(fieldTelepon.getText())) {
            String selectedValue = listEntries.getSelectedValue(); // Mendapatkan nilai entri yang dipilih
            String[] parts = selectedValue.split(". ");
            String id = parts[0]; // Mendapatkan ID entri
            // Memperbarui entri yang dipilih berdasarkan ID
            Entry.updateEntry(Integer.parseInt(id), new Entry(fieldNama.getText(), fieldAlamat.getText(), fiedlKota.getText(), fieldTelepon.getText()));
            JOptionPane.showMessageDialog(null, "Entri berhasil diperbarui!");
            loadEntries(); // Memuat ulang daftar entri
        } else {
            // Menampilkan pesan jika tidak ada entri yang dipilih
            JOptionPane.showMessageDialog(null, "Pilih entri yang ingin diubah terlebih dahulu!");
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedIndex = listEntries.getSelectedIndex(); // Mendapatkan indeks entri yang dipilih
        // Memastikan ada entri yang dipilih
        if (selectedIndex != -1) {
            String selectedValue = listEntries.getSelectedValue();
            String[] parts = selectedValue.split(". ");
            String id = parts[0]; // Mendapatkan ID entri
            // Menghapus entri berdasarkan ID
            Entry.deleteEntry(Integer.parseInt(id));
            JOptionPane.showMessageDialog(null, "Entri berhasil dihapus!");
            loadEntries(); // Memuat ulang daftar entri
        } else {
            // Menampilkan pesan jika tidak ada entri yang dipilih
            JOptionPane.showMessageDialog(null, "Pilih entri yang ingin dihapus terlebih dahulu!");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // Memastikan field pencarian tidak kosong
        if (!fieldCari.getText().equals("")) {            
            try (ResultSet rs = Entry.searchEntries(fieldCari.getText())) {
                // Memeriksa apakah ada hasil yang ditemukan
                if (rs.isBeforeFirst()) {
                    listModel.clear(); // Menghapus daftar entri sebelumnya
                    while (rs != null && rs.next()) {
                        // Menambahkan entri yang ditemukan ke listModel
                        listModel.addElement(rs.getInt("id") + ". " + rs.getString("nama") + " - " + rs.getString("alamat") + " - " + rs.getString("kota") + " - " + rs.getString("telepon"));
                    }
                } else {
                    // Menampilkan pesan jika entri yang dicari tidak ditemukan
                    JOptionPane.showMessageDialog(null, "Entri yang mengandung " + fieldCari.getText() + " tidak ditemukan!");
                    loadEntries(); // Memuat ulang daftar entri
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            // Menampilkan pesan jika field pencarian kosong
            JOptionPane.showMessageDialog(null, "Field Pencarian tidak boleh kosong!");
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnImporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImporActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files (*.txt)", "txt"));

        int result = fileChooser.showOpenDialog(this);

        // Memastikan file dipilih untuk diimpor
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    // Memisahkan data dengan koma dan menambahkan entri ke database
                    String[] data = line.split(",");
                    if (data.length == 4) {
                        Entry entry = new Entry(data[0].trim(), data[1].trim(), data[2].trim(), data[3].trim());
                        Entry.addEntry(entry);
                        loadEntries(); // Memuat ulang daftar entri
                    }
                }
                JOptionPane.showMessageDialog(this, "Data berhasil diimpor dari file.");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat membaca file: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnImporActionPerformed

    private void btnEksporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEksporActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files (*.txt)", "txt"));

        int result = fileChooser.showSaveDialog(this);

        // Memastikan file dipilih untuk diekspor
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            // Menambahkan ekstensi .txt jika tidak ada
            if (!file.getName().toLowerCase().endsWith(".txt")) {
                file = new File(file.getAbsolutePath() + ".txt");
            }

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
                // Menulis setiap entri dari listModel ke file
                for (int i = 0; i < listModel.size(); i++) {
                    String entry = listModel.getElementAt(i);
                    String cleanedEntry = entry.replaceFirst("^[^\\.]+\\.\\s*", "");
                    writer.write(cleanedEntry.replace(" - ", ","));
                    writer.newLine();
                }
                JOptionPane.showMessageDialog(this, "Data berhasil diekspor ke file.");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menulis file: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnEksporActionPerformed

    private void btnMuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuatActionPerformed
        loadEntries(); // Memuat ulang daftar entri
    }//GEN-LAST:event_btnMuatActionPerformed

    private void listEntriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEntriesValueChanged
        // Memastikan perubahan seleksi tidak sedang dalam proses
        if (!evt.getValueIsAdjusting()) {
            String selectedValue = listEntries.getSelectedValue();
            if (selectedValue != null) {
                // Memisahkan dan menampilkan data entri ke dalam field
                String[] parts = selectedValue.split(" - ");
                String foo = parts[0];
                String[] separate = foo.split(". ");
                String nama = separate[1];
                String alamat = parts[1];
                String kota = parts[2];
                String telepon = parts[3];
                fieldNama.setText(nama);
                fieldAlamat.setText(alamat);
                fiedlKota.setText(kota);
                fieldTelepon.setText(telepon);
            }
        }
    }//GEN-LAST:event_listEntriesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BukuAlamat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BukuAlamat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BukuAlamat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BukuAlamat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Database.createTable(); // Membuat tabel di database jika belum ada
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BukuAlamat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnEkspor;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnImpor;
    private javax.swing.JButton btnMuat;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JTextField fiedlKota;
    private javax.swing.JTextField fieldAlamat;
    private javax.swing.JTextField fieldCari;
    private javax.swing.JTextField fieldNama;
    private javax.swing.JTextField fieldTelepon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel labelJudul;
    private javax.swing.JList<String> listEntries;
    // End of variables declaration//GEN-END:variables
}
